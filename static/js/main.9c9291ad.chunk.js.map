{"version":3,"sources":["components/habit.jsx","components/habitAddForm.jsx","components/habits.jsx","components/navbar.jsx","app.jsx","index.js"],"names":["Habit","handleIncrement","props","onIncrement","habit","handleDecrement","onDecrement","handleDelete","onDelete","console","log","this","name","count","className","onClick","PureComponent","HabitAddForm","memo","inputRef","React","createRef","onSubmit","event","preventDefault","current","value","onAdd","ref","type","placeholder","Habits","handleAdd","habits","map","id","onReset","Component","Navbar","totalCount","App","state","item","setState","index","indexOf","splice","Date","now","handleReset","filter","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c9291ad.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\r\n\r\n// Habit 컴포넌트의 부모 컴포넌트는 Habits이다.\r\n// 부모컴포넌트의 데이터 호출시에는 props를 활용하고, 자신의 데이터를 호출할 때는 state를 사용한다.\r\n\r\nclass Habit extends PureComponent {\r\n\r\n  componentDidMount() {\r\n    console.log(`habit : ${this.props.habit.name} mounted`)\r\n  }\r\n  \r\n  componentWillUnmount() {\r\n    console.log(`habit : ${this.props.habit.name} will Unmounted`)\r\n  }\r\n\r\n  handleIncrement = () => {\r\n    this.props.onIncrement(this.props.habit)\r\n  }\r\n\r\n  handleDecrement = () => {\r\n    this.props.onDecrement(this.props.habit)\r\n  }\r\n\r\n  handleDelete = () => {\r\n    this.props.onDelete(this.props.habit)\r\n  }\r\n\r\n  render() {\r\n    // console.log('Habit')\r\n    // console.log(this.props.habit);\r\n    // const habitName = this.props.habit.name;\r\n    const {name, count} = this.props.habit;\r\n\r\n    return (\r\n      <li className=\"habit\">\r\n        <span className=\"habit-name\">{name}</span>\r\n        <span className=\"habit-count\">{count}</span>\r\n\r\n        <button className=\"habit-button habit-increase\" onClick={this.handleIncrement}>\r\n          <i className=\"fas fa-plus-square\"></i>\r\n        </button>\r\n\r\n        <button className=\"habit-button habit-decrease\" onClick={this.handleDecrement}>\r\n          <i className=\"fas fa-minus-square\"></i>\r\n        </button>\r\n\r\n        <button className=\"habit-button habit-delete\" onClick={this.handleDelete}>\r\n          <i className=\"fas fa-trash\"></i>\r\n        </button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Habit;","import React, {memo} from 'react'\r\n\r\nconst HabitAddForm = memo((props) => {\r\n      \r\n  const inputRef = React.createRef();\r\n\r\n\r\n  const onSubmit = event => {\r\n    event.preventDefault();\r\n    // console.log(this.inputRef.current.value);\r\n    const name = inputRef.current.value;\r\n    // name && this.props.onAdd(name);\r\n    \r\n    if(name !== ''){\r\n      props.onAdd(name);\r\n    }\r\n    inputRef.current.value = '';\r\n  }\r\n\r\n  \r\n  return (\r\n    <form className=\"add=form\" onSubmit={onSubmit}>\r\n      <input \r\n        ref={inputRef}\r\n        type=\"text\" \r\n        className=\"add-input\" \r\n        placeholder=\"Please enter in your habit\"/>\r\n      <button className=\"add-button\">Add</button>\r\n    </form>\r\n  )\r\n});\r\n\r\nexport default HabitAddForm;\r\n\r\n// export default class HabitAddForm extends PureComponent {\r\n\r\n//   // Ref\r\n//   // DOM에서는 document.querySeletor로 원하는 요소를 지정해 줬다면\r\n//   // React에서는 inputRef = React.createRef()를 선언후,\r\n//   // 원하는 요소에 ref={this.inputRef}를 사용하면 동일한 기능을 한다.\r\n//   inputRef = React.createRef();\r\n\r\n\r\n//   onSubmit = event => {\r\n//     event.preventDefault();\r\n//     // console.log(this.inputRef.current.value);\r\n//     const name = this.inputRef.current.value;\r\n//     // name && this.props.onAdd(name);\r\n    \r\n//     if(name !== ''){\r\n//       this.props.onAdd(name);\r\n//     }\r\n//     this.inputRef.current.value = '';\r\n//   }\r\n\r\n//   render() {\r\n//     // console.log('Habit')\r\n//     return (\r\n//       <form className=\"add=form\" onSubmit={this.onSubmit}>\r\n//         <input \r\n//           ref={this.inputRef}\r\n//           type=\"text\" \r\n//           className=\"add-input\" \r\n//           placeholder=\"Please enter in your habit\"/>\r\n//         <button className=\"add-button\">Add</button>\r\n//       </form>\r\n//     )\r\n//   }\r\n// }\r\n","import React, { Component } from 'react'\r\nimport Habit from './habit'\r\nimport HabitAddForm from './habitAddForm'\r\n// Habits라는 컴포넌트 생성 후 , 기존에 있던 Habit이라는 컴포넌트를 자식 컴포넌트로 만들었다.\r\n// 자식 컴포넌트에서 부모컴포넌트에 접근 할 시에는 props 로 호출한다.\r\n// \r\n\r\nexport default class Habits extends Component {\r\n  // state = {\r\n  //   habits: [\r\n  //     {id:1, name: 'Reading', count: 0},\r\n  //     {id:2, name: 'Running', count: 0},\r\n  //     {id:3, name: 'Coding', count: 0}\r\n  //   ],\r\n  // };\r\n\r\n  handleIncrement = (habit) => {\r\n    // console.log(`handleIncrement : ${habit.name}`);\r\n    // const habits = [...this.state.habits];\r\n    // console.log(habits); ...의 의미는 그대로 복사해온다라는 뜻\r\n    // const index = habits.indexOf(habit);\r\n    // habits[index].count++;\r\n    // this.setState({\r\n    //   habits: habits\r\n    // });\r\n\r\n    this.props.onIncrement(habit);\r\n\r\n  }\r\n\r\n  handleDecrement = (habit) => {\r\n    // console.log(`handleDecrement : ${habit.name}`)\r\n    // const habits = [...this.state.habits];\r\n    // const index = habits.indexOf(habit);\r\n    // habits[index].count--;\r\n    // if(habits[index].count < 0){\r\n    //   habits[index].count=0;\r\n    // }\r\n    // this.setState({\r\n    //   habits:habits\r\n    // })\r\n    this.props.onDecrement(habit);\r\n  }\r\n\r\n  handleDelete = (habit) => {\r\n    // console.log(`handleDelete : ${habit.name}`)\r\n    // const habits = [...this.state.habits]\r\n    // const index = habits.indexOf(habit);\r\n    // habits.splice(index, 1);\r\n    // this.setState({\r\n    //   habits:habits\r\n    // })\r\n    this.props.onDelete(habit);\r\n  }\r\n\r\n  handleAdd = (name) => {\r\n    this.props.onAdd(name);\r\n  }\r\n\r\n  render() {\r\n    // console.log('Habits')\r\n    return (\r\n      <div>\r\n        <HabitAddForm onAdd={this.handleAdd} />\r\n        <ul>\r\n          {\r\n            // app.js에서 habits를 전달해 줬으니 배열로 담겨져 있다.\r\n            this.props.habits.map(habit => (\r\n              <Habit \r\n                key={habit.id} \r\n                habit={habit}\r\n                onIncrement={this.handleIncrement}\r\n                onDecrement={this.handleDecrement}\r\n                onDelete={this.handleDelete} \r\n              />\r\n              )\r\n            )\r\n          }\r\n        </ul>\r\n        <button className=\"habits-reset\" onClick={this.props.onReset}>Reset All</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react'\r\n\r\nexport default class Navbar extends PureComponent {\r\n  render() {\r\n    // console.log(\"Navbar\")\r\n    return (\r\n      <nav className=\"navbar\">\r\n        <i className=\"navbar-logo fas fa-leaf\"></i>\r\n        <span>Habit Tracker</span>\r\n        <span className=\"navbar-count\">{this.props.totalCount}</span>\r\n      </nav>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './app.css';\r\nimport Habits from './components/habits';\r\nimport Navbar from './components/navbar'\r\n\r\nclass App extends Component {\r\n  state = {\r\n    habits: [\r\n      {id:1, name: 'Reading', count: 0},\r\n      {id:2, name: 'Running', count: 0},\r\n      {id:3, name: 'Coding', count: 0}\r\n    ],\r\n  };\r\n\r\n  handleIncrement = (habit) => {\r\n    console.log(`handleIncrement : ${habit.name}`);\r\n    // const habits = [...this.state.habits];\r\n    // console.log(habits); ...의 의미는 그대로 복사해온다라는 뜻\r\n    // const index = habits.indexOf(habit);\r\n    // habits[index].count++;\r\n    const habits = this.state.habits.map(item => {\r\n      if(item.id === habit.id){\r\n        // console.log({...habit})\r\n        // console.log({...habit, count:habit.count + 1})\r\n        return {...habit, count:habit.count + 1};\r\n      }\r\n      return item;\r\n    });\r\n\r\n    this.setState({\r\n      habits: habits\r\n    });\r\n  }\r\n\r\n  handleDecrement = (habit) => {\r\n    console.log(`handleDecrement : ${habit.name}`)\r\n    // const habits = [...this.state.habits];\r\n    // const index = habits.indexOf(habit);\r\n    // habits[index].count--;\r\n    // if(habits[index].count < 0){\r\n    //   habits[index].count=0;\r\n    // }\r\n    const habits = this.state.habits.map(item => {\r\n      if(item.id === habit.id){\r\n        let count = habit.count -1;\r\n        if(count <0){\r\n          count = 0;\r\n        }\r\n        // console.log({...habit, count:count});\r\n        return {...habit, count:count}\r\n      }\r\n      return item;\r\n    })\r\n    this.setState({\r\n      habits:habits\r\n    })\r\n  }\r\n\r\n  handleDelete = (habit) => {\r\n    console.log(`handleDelete : ${habit.name}`)\r\n    const habits = [...this.state.habits]\r\n    const index = habits.indexOf(habit);\r\n    habits.splice(index, 1);\r\n    this.setState({\r\n      habits:habits\r\n    })\r\n  }\r\n\r\n  handleAdd = (name) => {\r\n    const habits = [...this.state.habits, {id: Date.now(), name:name, count:0}]\r\n    // 기존에 있던 배열 ...this.state.habits, (추가할것) {}\r\n    this.setState({\r\n      habits:habits\r\n    })\r\n\r\n  }\r\n\r\n  handleReset = () => {\r\n    // 이것은 오브젝트안의 데이터를 바꿔서 반환하는것이므로 오브젝트에는 변경이 없다.\r\n    // const habits = this.state.habits.map(habit => {\r\n    //   habit.count = 0;\r\n    //   return habit;\r\n    // })\r\n\r\n    // 이것은 새로운 오브젝트를 생성후 데이터값을 바꿔서 오브젝트로 반환하는 것\r\n    const habits = this.state.habits.map(habit => {\r\n      if(habit.count !== 0){\r\n        return {...habit, count:0}\r\n      }\r\n      return habit;\r\n    })\r\n    this.setState({\r\n      habits:habits\r\n    })\r\n  }\r\n  \r\n  render() {\r\n    // console.log('App')\r\n    return (\r\n      <>\r\n        <Navbar totalCount={this.state.habits.filter(item => item.count > 0).length} />\r\n        <Habits\r\n          habits={this.state.habits}\r\n          onIncrement={this.handleIncrement}\r\n          onDecrement={this.handleDecrement}\r\n          onDelete={this.handleDelete}\r\n          onAdd={this.handleAdd}\r\n          onReset={this.handleReset}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport '@fortawesome/fontawesome-free/js/all.js';\nimport SimpleHabit from './components/simpleHabit'\n\n// React.StrictMode : 에러 메세지 표시도구정도의 느낌\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}